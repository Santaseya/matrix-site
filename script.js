function reduceToOneDigit(num) {
    while (num > 22) {
        num = num.toString().split("").reduce((acc, digit) => acc + parseInt(digit), 0);
    }
    return num;
}

function calculateMatrix() {
    let birthdate = document.getElementById("birthdate").value;
    if (!birthdate) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è.");
        return;
    }

    let [year, month, day] = birthdate.split("-").map(Number);

    // –û—Å–Ω–æ–≤–Ω—ã–µ –∑–æ–Ω—ã
    let A = day;
    let B = month;
    let V = reduceToOneDigit(year.toString().split("").reduce((acc, digit) => acc + parseInt(digit), 0));
    let G = reduceToOneDigit(A + B + V);
    let D = reduceToOneDigit(A + B + V + G);

    // –†–æ–¥–æ–≤—ã–µ –ª–∏–Ω–∏–∏
    let LO = reduceToOneDigit(A + B);
    let LM = reduceToOneDigit(B + V);

    // –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ö–∞—Ä–º–∞
    let MK_JEN = reduceToOneDigit(A + G);
    let MK_MUZ = reduceToOneDigit(V + G);

    // –í—ã–≤–æ–¥–∏–º —á–∏—Å–ª–∞ –°–í–ï–†–•–£
    let resultNumbers = `
        <p>${A}</p>
        <p>${B}</p>
        <p>${V}</p>
        <p>${G}</p>
        <p>${D}</p>
        <p>${LO}</p>
        <p>${LM}</p>
        <p>${MK_JEN}</p>
        <p>${MK_MUZ}</p>
    `;
    document.getElementById("resultNumbers").innerHTML = resultNumbers;

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ú–∞—Ç—Ä–∏—Ü—É (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–∞—Å—á—ë—Ç–∞!)
    updateMatrix([D, B, A, G, V, LO, LM, MK_JEN, MK_MUZ]);
}

    // –û–±–Ω–æ–≤–ª—è–µ–º —á–∏—Å–ª–∞ –≤ –¥–∏–∞–≥—Ä–∞–º–º–µ
    updateMatrix([
        D, // –¶–µ–Ω—Ç—Ä (–ó–æ–Ω–∞ –∫–æ–º—Ñ–æ—Ä—Ç–∞)
        B, // –í–µ—Ä—Ö (–ì–ª–∞–≤–Ω—ã–π —Ç–∞–ª–∞–Ω—Ç ‚Üí –º–µ—Å—è—Ü —Ä–æ–∂–¥–µ–Ω–∏—è)
        A, // –õ–µ–≤—ã–π –±–æ–∫ (–ó–æ–Ω–∞ —Ä–µ—Å—É—Ä—Å–∞ ‚Üí –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è)
        G, // –ù–∏–∑ (–ö–∞—Ä–º–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞)
        V, // –ü—Ä–∞–≤—ã–π –±–æ–∫ (–ó–∞–¥–∞—á–∞ –¥—É—à–∏)
        LO, // –õ–µ–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π (–õ–∏–Ω–∏—è –æ—Ç—Ü–∞)
        LM, // –ü—Ä–∞–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π (–õ–∏–Ω–∏—è –º–∞—Ç–µ—Ä–∏)
        MK_JEN, // –õ–µ–≤—ã–π –Ω–∏–∂–Ω–∏–π (–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä–º–∞ –ø–æ –∂–µ–Ω—Å–∫–æ–º—É —Ä–æ–¥—É)
        MK_MUZ // –ü—Ä–∞–≤—ã–π –Ω–∏–∂–Ω–∏–π (–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä–º–∞ –ø–æ –º—É–∂—Å–∫–æ–º—É —Ä–æ–¥—É)
    ]);
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∏–∞–≥—Ä–∞–º–º—ã
function updateMatrix(numbers = []) {
    document.getElementById("centerNumber").textContent = numbers[0] || "";
    document.getElementById("topNumber").textContent = numbers[1] || "";
    document.getElementById("leftNumber").textContent = numbers[2] || "";
    document.getElementById("bottomNumber").textContent = numbers[3] || "";
    document.getElementById("rightNumber").textContent = numbers[4] || "";
    document.getElementById("leftTop").textContent = numbers[5] || "";
    document.getElementById("rightTop").textContent = numbers[6] || "";
    document.getElementById("leftBottom").textContent = numbers[7] || "";
    document.getElementById("rightBottom").textContent = numbers[8] || "";
}


// üëá –¢–µ–ø–µ—Ä—å –º–∞—Ç—Ä–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—É—Å—Ç–∞—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
updateMatrix([]);
window.onload = function() {
    updateMatrix(["", "", "", "", "", "", "", "", ""]); // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—Ä—É–≥–∏ –≤ –ú–∞—Ç—Ä–∏—Ü–µ
    document.getElementById("resultNumbers").innerHTML = ""; // –£–±–∏—Ä–∞–µ–º —á–∏—Å–ª–∞ —Å–≤–µ—Ä—Ö—É
};
